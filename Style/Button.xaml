<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Controls="clr-namespace:RayBin.FishImageLabel">
    <Style TargetType="{x:Type Controls:IconRadioButton}">
        <Setter Property="Height" Value="32" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource LeftMenuForeColor}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="10,2,10,2" />
        <Setter Property="IconMargin" Value="10,0,10,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:IconRadioButton}">
                    <Border x:Name="Template" BorderThickness="0">
                        <StackPanel VerticalAlignment="Center" Orientation="Horizontal" SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="0" Margin="{TemplateBinding IconMargin}">
                                    <Path x:Name="Icon" UseLayoutRounding="True" SnapsToDevicePixels="True" RenderOptions.BitmapScalingMode="NearestNeighbor" Width="{TemplateBinding IconWidth}" Height="{TemplateBinding IconHeight}" Data="{TemplateBinding Icon}" Fill="{TemplateBinding Foreground}" Stretch="Fill" />
                                </Grid>
                                <ContentPresenter x:Name="contentPresenter" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" Focusable="False" />
                            </Grid>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Margin" Value="10,2,10,2" />
                            <Setter TargetName="Template" Property="Background" Value="{DynamicResource LeftMenuMouseOverBackColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False" />
                        <Trigger Property="IsPressed" Value="True" />
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource LeftMenuSelectedForeColor}" />
                            <Setter TargetName="Template" Property="Background" Value="{DynamicResource LeftMenuSelectedBackColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Controls:IconButton}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter	Property="Template">            
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:IconButton}">
                    <Border x:Name="Template" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Path Grid.Column="0" Name="Icon" Width="{TemplateBinding IconWidth}" Height="{TemplateBinding IconHeight}" Data="{TemplateBinding Icon}" Fill="{TemplateBinding Foreground}" UseLayoutRounding="True" SnapsToDevicePixels="True" RenderOptions.BitmapScalingMode="NearestNeighbor" Stretch="Fill" />
                            <TextBlock Grid.Column="0" Name="IconText" Text="{TemplateBinding IconText}" VerticalAlignment="Center" FontSize="{TemplateBinding IconTextSize}" FontFamily="/RayBin.FishImageLabel;component/Font/#RayBin.FishImageLabel" HorizontalAlignment="Center"></TextBlock>
                            <TextBlock Grid.Column="1" Name="Text" Text="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Left"></TextBlock>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="Icon" Property="Fill" Value="{Binding MouseOverColor, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="IconText" Property="Foreground" Value="{Binding MouseOverColor, RelativeSource={RelativeSource TemplatedParent}}" />                               
                            <Setter TargetName="Text" Property="Foreground" Value="{Binding MouseOverColor, RelativeSource={RelativeSource TemplatedParent}}" />                            
                            <Setter	TargetName="Template" Property="Background" Value="{Binding MouseOverBackColor, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="SnapsToDevicePixels" Value="true" />
                            <Setter TargetName="Icon" Property="Fill" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter	TargetName="Template" Property="UIElement.Opacity" Value="0.6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#E6E6E6" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="White" />
        <Setter	Property="Template">            
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <DockPanel x:Name="Template">
                            <TextBlock x:Name="Text" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Text" Property="Foreground" Value="{Binding MouseOverColor, RelativeSource={RelativeSource TemplatedParent}}" />                            
                            <Setter	TargetName="Template" Property="Background" Value="{Binding MouseOverBackColor, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter	TargetName="Template" Property="UIElement.Opacity" Value="0.6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>    
    <Style x:Key="MenuItemStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Template" BorderBrush="Gray" BorderThickness="0.3" Background="Transparent">
                        <WrapPanel VerticalAlignment="Center" Orientation="Horizontal" SnapsToDevicePixels="True">
                            <Path Width="14" Height="14" Data="" Fill="{TemplateBinding Foreground}" />
                            <ContentPresenter Margin="10,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        </WrapPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Template" Property="Background" Value="#22666666"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Template" Property="Background" Value="#22888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>